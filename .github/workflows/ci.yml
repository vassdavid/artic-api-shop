# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Symfony

on:
  push:
    branches: [ "main", "development" ]
  pull_request:
    branches: [ "main",  "development" ]

permissions:
  contents: read

jobs:
  symfony-tests:
    runs-on: ubuntu-latest
    steps:
    #  To automatically get bug fixes and new Php versions for shivammathur/setup-php,
    # change this to (see https://github.com/shivammathur/setup-php#bookmark-versioning):
    # uses: shivammathur/setup-php@v2
    - uses: shivammathur/setup-php@2cb9b829437ee246e9b3cac53555a39208ca6d28
      with:
        php-version: '8.2'
        tools: cs2pr, phpcs
    - uses: actions/checkout@v3
    - name: Copy .env.test.local
      run: php -r "file_exists('src/.env.test.local') || copy('src/.env.test', 'src/.env.test.local');"
    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: src/vendor
        key: ${{ runner.os }}-php-${{ hashFiles('src/**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-
    - name: Install Dependencies
      working-directory: src
      run: composer install --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
    - name: Create Database
      run: |
        mkdir -p data
        touch data/database.sqlite
    - name: Execute phpstan
      run: src/vendor/bin/phpstan analyse -c src/phpstan.neon
    - name: Execute tests (Unit and Feature tests) via PHPUnit
      env:
        DATABASE_URL: sqlite:///%kernel.project_dir%/data/database.sqlite
      run: src/vendor/bin/phpunit --testsuite Unit -c src/phpunit.xml.dist --coverage-clover coverage.xml
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      with:
        verbose: true
        files: ./coverage.xml
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}